{"ast":null,"code":"import _classCallCheck from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\src\\\\pages\\\\test\\\\Test.js\";\nimport React from \"react\";\nimport { Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button, Input } from \"reactstrap\";\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport s from \"./Dashboard.module.scss\";\nimport Widget from \"../../components/Widget\";\nimport stocksImg from \"../../images/stocks.svg\";\nimport { fetchTests, fetchPaidTests, createTest, updateTestPdf } from \"../../actions/test\";\nimport { fetchOfflineUsers } from \"../../actions/user\";\nimport ReactQuill from 'react-quill';\nimport { toast, ToastContainer } from 'react-toastify';\nimport FileSaver from 'file-saver';\nimport Swal from 'sweetalert2';\n\nvar validator = require(\"email-validator\");\n\nvar Test = /*#__PURE__*/function (_React$Component) {\n  _inherits(Test, _React$Component);\n\n  function Test() {\n    var _this;\n\n    _classCallCheck(this, Test);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Test).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"onFileChange\", function (event, user_id, order_id) {\n      // event.preventDefault()\n      console.log(user_id, order_id);\n      var selectedFile = event.target.files[0];\n      var url = URL.createObjectURL(new Blob([selectedFile], {\n        type: 'application/pdf'\n      }));\n\n      _this.setState({\n        selectedFileURL: url\n      });\n\n      _this.props.dispatch(updateTestPdf({\n        user_id: user_id,\n        order_id: order_id,\n        blob: url\n      }));\n\n      console.log(url); // FileSaver.saveAs(url, \"test_result.pdf\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createSelectItemsUser\", function () {\n      var items = [];\n\n      for (var i = 0; i < _this.props.users.length; i++) {\n        items.push( /*#__PURE__*/React.createElement(\"option\", {\n          key: _this.props.users[i].id,\n          value: _this.props.users[i].id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 20\n          }\n        }, _this.props.users[i].first_name, \" \", _this.props.users[i].last_name));\n      }\n\n      return items;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createSelectItemsTest\", function () {\n      var items = [];\n\n      for (var i = 0; i < _this.props.tests.length; i++) {\n        items.push( /*#__PURE__*/React.createElement(\"option\", {\n          key: _this.props.tests[i].id,\n          value: _this.props.tests[i].id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 22\n          }\n        }, _this.props.tests[i].name));\n      }\n\n      return items;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createTest\", function (event) {\n      event.preventDefault();\n\n      _this.props.dispatch(createTest({\n        user_id: _this.state.user,\n        test_id: _this.state.test\n      }));\n\n      _this.setState({\n        modal: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"get_user_name\", function (condition) {\n      // console.log(condition);\n      var fname = '';\n\n      _this.props.users.filter(function (e) {\n        return e.id === condition;\n      }).map(function (key, i) {\n        return fname = key.first_name + \" \" + key.last_name;\n      });\n\n      return fname;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"get_test_name\", function (condition) {\n      // console.log(condition);\n      var name = '';\n\n      _this.props.tests.filter(function (e) {\n        return e.id === condition;\n      }).map(function (key, i) {\n        return name = key.name;\n      });\n\n      return name;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.setState({\n        title: '',\n        description: '',\n        imgurl: ''\n      });\n\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pdf_download\", function (event, pdf_blob) {\n      event.preventDefault();\n      console.log(pdf_blob);\n\n      if (pdf_blob.includes(\"blob:\")) {\n        FileSaver.saveAs(blob, \"test_result.pdf\");\n      } else {\n        var blob = new Blob([pdf_blob], {\n          type: 'application/pdf'\n        });\n        FileSaver.saveAs(blob, \"test_result.pdf\");\n      }\n    });\n\n    _this.state = {\n      modal: false,\n      user: 0,\n      test: 0,\n      url: '',\n      selectedFile: null\n    };\n    return _this;\n  }\n\n  _createClass(Test, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchTests());\n      this.props.dispatch(fetchPaidTests());\n      this.props.dispatch(fetchOfflineUsers());\n    }\n  }, {\n    key: \"onDropdownSelectedUser\",\n    value: function onDropdownSelectedUser(e) {\n      console.log(\"THE VAL\", e.target.value);\n      this.setState({\n        user: e.target.value\n      }); //here you will see the current selected value of the select input\n    }\n  }, {\n    key: \"onDropdownSelectedTest\",\n    value: function onDropdownSelectedTest(e) {\n      this.setState({\n        test: e.target.value\n      });\n      console.log(\"THE VAL\", e.target.value); //here you will see the current selected value of the select input\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      var _this$props = this.props,\n          tests = _this$props.tests,\n          paid_tests = _this$props.paid_tests,\n          users = _this$props.users;\n      console.log(\"paid_tests\", paid_tests);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: s.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 4,\n        style: {\n          paddingBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, \"Create\"), ' ')), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, paid_tests.length > 0 ? /*#__PURE__*/React.createElement(Widget, {\n        title: /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontWeight: 700\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 22\n          }\n        }, \"Patients\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"fs-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, \"UserName\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, \"Test\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, \"Result\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, paid_tests.map(function (row) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: row.id,\n          className: row.pdf_blob == null ? s.borderRed : '',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 23\n          }\n        }, row.id), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 23\n          }\n        }, _this2.get_user_name(row.userID)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 23\n          }\n        }, _this2.get_test_name(row.testID)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 23\n          }\n        }, row.pdf_blob != null && row.pdf_blob != \"\" ? /*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick(e) {\n            return _this2.pdf_download(e, row.pdf_blob);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 71\n          }\n        }, \" Download \") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"file\",\n          id: row.id,\n          style: {\n            display: 'none'\n          },\n          onChange: function onChange(event) {\n            return _this2.onFileChange(event, row.userID, row.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          for: row.id,\n          style: {\n            cursor: 'pointer'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }\n        }, \"Upload Result\"))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 23\n          }\n        }));\n      })))) : /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontWeight: 700\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, \"NO DATA FOUND\"))), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, \"Create New Test\"), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, \"User\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        onChange: function onChange(e) {\n          return _this2.onDropdownSelectedUser(e);\n        },\n        label: \"Users\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }\n      }, this.createSelectItemsUser())), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }, \"Test\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        onChange: function onChange(e) {\n          return _this2.onDropdownSelectedTest(e);\n        },\n        label: \"Tests\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, this.createSelectItemsTest()))), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick(event) {\n          return _this2.createTest(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, \"Create\"), ' ', /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return Test;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tests: state.test.tests,\n    paid_tests: state.test.paid_tests,\n    users: state.auth.offline_users\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Test));","map":{"version":3,"sources":["D:/30-12/setup 2 new/final file/src/pages/test/Test.js"],"names":["React","Row","Col","Modal","ModalHeader","ModalBody","ModalFooter","Table","Button","Input","withRouter","Redirect","Link","connect","axios","s","Widget","fetchTests","fetchPaidTests","createTest","updateTestPdf","fetchOfflineUsers","ReactQuill","toast","ToastContainer","FileSaver","Swal","validator","require","Test","event","user_id","order_id","console","log","selectedFile","target","files","url","URL","createObjectURL","Blob","type","setState","selectedFileURL","props","dispatch","blob","items","i","users","length","push","id","first_name","last_name","tests","name","preventDefault","state","user","test_id","test","modal","condition","fname","filter","e","map","key","title","description","imgurl","pdf_blob","includes","saveAs","value","paid_tests","root","paddingBottom","toggle","fontWeight","row","borderRed","get_user_name","userID","get_test_name","testID","pdf_download","display","onFileChange","cursor","onDropdownSelectedUser","createSelectItemsUser","onDropdownSelectedTest","createSelectItemsTest","Component","mapStateToProps","auth","offline_users"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Modal, ModalHeader, ModalBody, ModalFooter,  Table, Button, Input } from \"reactstrap\";\r\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport s from \"./Dashboard.module.scss\";\r\nimport Widget from \"../../components/Widget\";\r\nimport stocksImg from \"../../images/stocks.svg\";\r\nimport { fetchTests, fetchPaidTests, createTest, updateTestPdf } from \"../../actions/test\";\r\nimport { fetchOfflineUsers } from \"../../actions/user\";\r\nimport ReactQuill from 'react-quill';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport FileSaver from 'file-saver';\r\nimport Swal from 'sweetalert2';\r\nvar validator = require(\"email-validator\");\r\n\r\nclass Test extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      modal: false,\r\n      user: 0,\r\n      test: 0,\r\n      url: '',\r\n      selectedFile: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(fetchTests());\r\n    this.props.dispatch(fetchPaidTests());\r\n    this.props.dispatch(fetchOfflineUsers());\r\n  }\r\n\r\n  onFileChange = (event, user_id, order_id) => {\r\n    // event.preventDefault()\r\n    console.log(user_id, order_id);\r\n    var selectedFile = event.target.files[0]\r\n    var url = URL.createObjectURL(new Blob([selectedFile] , {type:'application/pdf'}))\r\n    this.setState({ selectedFileURL: url})\r\n    this.props.dispatch(updateTestPdf({user_id: user_id, order_id: order_id, blob: url}));\r\n\r\n    console.log(url);\r\n\r\n\r\n    // FileSaver.saveAs(url, \"test_result.pdf\");\r\n  }\r\n\r\n  createSelectItemsUser = () => {\r\n     let items = [];\r\n     for (let i = 0; i < this.props.users.length; i++) {\r\n        items.push(<option key={this.props.users[i].id} value={this.props.users[i].id} >{this.props.users[i].first_name} {this.props.users[i].last_name}</option>);\r\n     }\r\n\r\n     return items;\r\n   }\r\n  createSelectItemsTest = () => {\r\n     let items = [];\r\n     for (let i = 0; i < this.props.tests.length; i++) {\r\n          items.push(<option key={this.props.tests[i].id} value={this.props.tests[i].id}>{this.props.tests[i].name}</option>);\r\n     }\r\n     return items;\r\n   }\r\n   onDropdownSelectedUser(e) {\r\n     console.log(\"THE VAL\", e.target.value);\r\n     this.setState({user: e.target.value})\r\n       //here you will see the current selected value of the select input\r\n   }\r\n   onDropdownSelectedTest(e) {\r\n     this.setState({test: e.target.value})\r\n       console.log(\"THE VAL\", e.target.value);\r\n       //here you will see the current selected value of the select input\r\n   }\r\n\r\n   createTest = (event) =>\r\n   {\r\n     event.preventDefault();\r\n     this.props.dispatch(createTest({user_id: this.state.user, test_id: this.state.test}));\r\n     this.setState({modal: false})\r\n   }\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n    // if ( nextProps.user != null && nextProps.edit == true && prevState.id != nextProps.user.id ) {\r\n    //   return {\r\n    //     id: nextProps.user.id,\r\n    //     fname: nextProps.user.first_name,\r\n    //     lname: nextProps.user.last_name,\r\n    //     email: nextProps.user.email,\r\n    //     number: nextProps.user.number,\r\n    //   };\r\n    // }\r\n    // return null;\r\n  // }\r\n\r\n  get_user_name = (condition) => {\r\n    // console.log(condition);\r\n    let fname = '';\r\n      this.props.users.filter((e) => e.id === condition).map((key, i) => (\r\n        fname = key.first_name + \" \" + key.last_name\r\n      ))\r\n    return fname\r\n    };\r\n\r\n    get_test_name = (condition) => {\r\n      // console.log(condition);\r\n      let name = '';\r\n        this.props.tests.filter((e) => e.id === condition).map((key, i) => (\r\n          name = key.name\r\n        ))\r\n      return name\r\n      };\r\n\r\n  toggle = () => {\r\n    this.setState({ title: '', description: '', imgurl: '' })\r\n    this.setState({ modal: !this.state.modal})\r\n  }\r\n\r\n  pdf_download = (event, pdf_blob) => {\r\n    event.preventDefault();\r\n    console.log(pdf_blob);\r\n    if(pdf_blob.includes(\"blob:\")){\r\n      FileSaver.saveAs(blob, \"test_result.pdf\");\r\n    }else{\r\n      var blob = new Blob([pdf_blob], {type: 'application/pdf'});\r\n      FileSaver.saveAs(blob, \"test_result.pdf\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    const { tests, paid_tests, users } = this.props;\r\n    console.log(\"paid_tests\", paid_tests);\r\n    return (\r\n      <div className={s.root}>\r\n      <ToastContainer />\r\n        <Row>\r\n          <Col xl={4} style={{ paddingBottom: '10px' }}>\r\n            <Button color=\"primary\" onClick={this.toggle}>Create</Button>{' '}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xl={12}>\r\n          {paid_tests.length >0 ?\r\n            <Widget\r\n              title={<p style={{ fontWeight: 700 }}>Patients</p>}\r\n            >\r\n              <Table responsive>\r\n                <thead>\r\n                  <tr className=\"fs-sm\">\r\n                    <th className=\"hidden-sm-down\">#</th>\r\n                    <th className=\"hidden-sm-down\">UserName</th>\r\n                    <th className=\"hidden-sm-down\">Test</th>\r\n                    <th className=\"hidden-sm-down\">Result</th>\r\n                    <th />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {paid_tests.map(row => (\r\n                    <tr key={row.id} className={ row.pdf_blob == null ? s.borderRed : ''}>\r\n                      <td>{row.id}</td>\r\n                      <td>\r\n                        {this.get_user_name(row.userID)}\r\n                      </td>\r\n                      <td>\r\n                        {this.get_test_name(row.testID)}\r\n                      </td>\r\n                      <td >\r\n                        {row.pdf_blob != null && row.pdf_blob != \"\" ? <a onClick={(e) => this.pdf_download(e, row.pdf_blob)}> Download </a> :\r\n                          <>\r\n                            <input type=\"file\" id={row.id} style={{display:'none'}} onChange={(event) => this.onFileChange(event, row.userID, row.id)}/>\r\n                            <label for={row.id} style={{cursor: 'pointer'}}>Upload Result</label>\r\n                          </>\r\n                        }\r\n                      </td>\r\n                      <td>\r\n                        { /* <a onClick={event => this.onEdit(event, row.id)}><img src={require(\"../../images/edit.png\")} width=\"20\" height=\"25\" /></a>\r\n                        <a onClick={event => this.onDelete(event, row.id)}><img src={require(\"../../images/delete.png\")} width=\"40\" height=\"25\"/></a> */}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Widget>\r\n            : <p style={{ fontWeight: 700 }}>NO DATA FOUND</p> }\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} >\r\n          <ModalHeader toggle={this.toggle}>Create New Test</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"user\">User</label>\r\n              <Input type=\"select\" onChange={(e) => this.onDropdownSelectedUser(e)} label=\"Users\">\r\n                  {this.createSelectItemsUser()}\r\n              </Input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"test\">Test</label>\r\n              <Input type=\"select\" onChange={(e) => this.onDropdownSelectedTest(e)}  label=\"Tests\">\r\n                  {this.createSelectItemsTest()}\r\n              </Input>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={(event) => this.createTest(event)}>Create</Button>{' '}\r\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  tests: state.test.tests,\r\n  paid_tests: state.test.paid_tests,\r\n  users: state.auth.offline_users,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(Test));\r\n"]},"metadata":{},"sourceType":"module"}