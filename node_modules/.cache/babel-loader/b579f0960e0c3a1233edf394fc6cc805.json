{"ast":null,"code":"import config from \"../config.js\";\nimport axios from 'axios';\nexport var FETCH_BLOGS_BEGIN = 'FETCH_BLOGS_BEGIN';\nexport var FETCH_BLOGS_SUCCESS = 'FETCH_BLOGS_SUCCESS';\nexport var EDIT_BLOGS_SUCCESS = 'EDIT_BLOGS_SUCCESS';\nexport var FETCH_BLOGS_FAILURE = 'FETCH_BLOGS_FAILURE';\nexport var fetchBlogsBegin = function fetchBlogsBegin() {\n  return {\n    type: FETCH_BLOGS_BEGIN\n  };\n};\nexport var fetchBlogsSuccess = function fetchBlogsSuccess(blogs, ary) {\n  return {\n    type: FETCH_BLOGS_SUCCESS,\n    payload: {\n      blogs,\n      ary\n    }\n  };\n};\nexport var editBlogsSuccess = function editBlogsSuccess(blogs, ary) {\n  return {\n    type: EDIT_BLOGS_SUCCESS,\n    payload: {\n      blogs,\n      ary\n    }\n  };\n};\nexport var fetchBlogsFailure = function fetchBlogsFailure(error) {\n  return {\n    type: FETCH_BLOGS_FAILURE,\n    payload: {\n      error\n    }\n  };\n};\nexport function fetchBlogs() {\n  return function (dispatch) {\n    axios.get(config.baseURLApi + 'get_blogs').then(function (response) {\n      var mimeType = 'image/png';\n      var ary = [];\n      response.data.data.map(function (res, index) {\n        console.log(res.image);\n\n        if (res.image != null) {\n          var buffer = res.image;\n          var b64 = new Buffer(buffer).toString('base64');\n          var url = \"data:\".concat(mimeType, \";base64,\").concat(b64);\n          ary.push({\n            'id': res.id,\n            url: url\n          });\n        }\n      });\n      dispatch(fetchBlogsSuccess(response.data.data, ary));\n      return response.data.data;\n    }).catch(function (error) {\n      dispatch(fetchBlogsFailure(error));\n    });\n  };\n}\nexport function createBlog(data) {\n  console.log(config.baseURLApi + \"create_blog\");\n  return function (dispatch) {\n    var formData = new FormData();\n    formData.append('myImage', data.image);\n    formData.append('title', data.title);\n    formData.append('description', data.description);\n    console.log(formData); // const config = {\n    //     headers: {\n    //         'content-type': 'multipart/form-data'\n    //     }\n    // };\n    // axios.post(config.baseURLApi+\"create_blog\",formData,config)\n\n    axios({\n      method: 'post',\n      url: config.baseURLApi + \"create_blog\",\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (response) {\n      dispatch(fetchBlogs());\n    }).catch(function (error) {\n      dispatch(fetchBlogsFailure(error));\n    });\n  };\n}\nexport function updateBlog(data) {\n  return function (dispatch) {\n    var formData = new FormData();\n    formData.append('id', data.id);\n\n    if (data.updateImage) {\n      formData.append('myImage', data.image);\n      formData.append('updateImage', 'true');\n    } else {\n      formData.append('updateImage', 'false');\n    }\n\n    formData.append('title', data.title);\n    formData.append('description', data.description); // axios.post(config.baseURLApi+'updateBlog', formData, { // receive two parameter endpoint url ,form data\n    // })\n\n    axios.post(config.baseURLApi + 'updateBlog', formData, {// receive two parameter endpoint url ,form data\n    }).then(function (response) {\n      dispatch(fetchBlogs());\n    }).catch(function (error) {\n      dispatch(fetchBlogsFailure(error));\n    }); // axios.post( config.baseURLApi+\"updateBlog/\", {id: data.id, title: data.title, description: data.description})\n    // .then((response) => {\n    //   window.location.reload();\n    // })\n    // .catch((error) => {\n    //   dispatch(fetchBlogsFailure(error))\n    // });\n  };\n}\nexport function getBlog(data) {\n  return function (dispatch) {\n    axios({\n      method: 'get',\n      url: config.baseURLApi + \"get_blog/\" + data.id\n    }).then(function (response) {\n      var mimeType = 'image/*';\n      var ary = '';\n      var buffer = response.data.data.image;\n      console.log(buffer);\n\n      if (response.data.data.image != null) {\n        console.log(\"if\");\n        var b64 = new Buffer(buffer).toString('base64');\n        ary = \"data:\".concat(mimeType, \";base64,\").concat(b64);\n      }\n\n      dispatch(editBlogsSuccess(response.data.data, ary));\n      return response.data.data;\n    }).catch(function (error) {\n      dispatch(fetchBlogsFailure(error));\n    });\n  };\n}\nexport function deleteBlog(data) {\n  return function (dispatch) {\n    axios({\n      method: 'delete',\n      url: config.baseURLApi + \"delete_blog/\" + data.id\n    }).then(function (response) {\n      // return response.data.data;\n      dispatch(fetchBlogs());\n    }).catch(function (error) {\n      dispatch(fetchBlogsFailure(error));\n    });\n  };\n} // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}","map":{"version":3,"sources":["D:/30-12/setup 2 new/final file/src/actions/blog.js"],"names":["config","axios","FETCH_BLOGS_BEGIN","FETCH_BLOGS_SUCCESS","EDIT_BLOGS_SUCCESS","FETCH_BLOGS_FAILURE","fetchBlogsBegin","type","fetchBlogsSuccess","blogs","ary","payload","editBlogsSuccess","fetchBlogsFailure","error","fetchBlogs","dispatch","get","baseURLApi","then","response","mimeType","data","map","res","index","console","log","image","buffer","b64","Buffer","toString","url","push","id","catch","createBlog","formData","FormData","append","title","description","method","headers","updateBlog","updateImage","post","getBlog","deleteBlog","handleErrors","ok","Error","statusText"],"mappings":"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","sourcesContent":["import config from \"../config.js\";\r\nimport axios from 'axios';\r\nexport const FETCH_BLOGS_BEGIN   = 'FETCH_BLOGS_BEGIN';\r\nexport const FETCH_BLOGS_SUCCESS = 'FETCH_BLOGS_SUCCESS';\r\nexport const EDIT_BLOGS_SUCCESS = 'EDIT_BLOGS_SUCCESS';\r\nexport const FETCH_BLOGS_FAILURE = 'FETCH_BLOGS_FAILURE';\r\n\r\nexport const fetchBlogsBegin = () => ({\r\n  type: FETCH_BLOGS_BEGIN\r\n});\r\n\r\nexport const fetchBlogsSuccess = (blogs, ary) => ({\r\n  type: FETCH_BLOGS_SUCCESS,\r\n  payload: { blogs, ary }\r\n});\r\n\r\nexport const editBlogsSuccess = (blogs, ary) => ({\r\n  type: EDIT_BLOGS_SUCCESS,\r\n  payload: { blogs, ary }\r\n});\r\n\r\nexport const fetchBlogsFailure = error => ({\r\n  type: FETCH_BLOGS_FAILURE,\r\n  payload: { error }\r\n});\r\n\r\nexport function fetchBlogs() {\r\n  return (dispatch) => {\r\n    axios.get(config.baseURLApi+'get_blogs')\r\n        .then(function (response) {\r\n          const mimeType = 'image/png';\r\n          var ary=[];\r\n          response.data.data.map((res, index) => {\r\n            console.log(res.image);\r\n            if(res.image != null){\r\n              const buffer = res.image;\r\n              const b64 = new Buffer(buffer).toString('base64')\r\n              var url = `data:${mimeType};base64,${b64}`;\r\n              ary.push({'id': res.id, url: url })\r\n            }\r\n          })\r\n          dispatch(fetchBlogsSuccess(response.data.data, ary));\r\n          return response.data.data;\r\n        })\r\n        .catch(function (error) {\r\n            dispatch(fetchBlogsFailure(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport function createBlog(data) {\r\n  console.log(config.baseURLApi+\"create_blog\");\r\n  return (dispatch) => {\r\n    const formData = new FormData();\r\n    formData.append('myImage', data.image);\r\n    formData.append('title', data.title);\r\n    formData.append('description', data.description);\r\n    console.log(formData);\r\n    // const config = {\r\n    //     headers: {\r\n    //         'content-type': 'multipart/form-data'\r\n    //     }\r\n    // };\r\n    // axios.post(config.baseURLApi+\"create_blog\",formData,config)\r\n    axios({\r\n      method: 'post',\r\n      url: config.baseURLApi+\"create_blog\",\r\n      data: formData,\r\n      headers: {'Content-Type': 'multipart/form-data' }\r\n      })\r\n    .then((response) => {\r\n      dispatch(fetchBlogs())\r\n    })\r\n    .catch((error) => {\r\n      dispatch(fetchBlogsFailure(error))\r\n    });\r\n    }\r\n}\r\n\r\nexport function updateBlog(data) {\r\n  return (dispatch) => {\r\n\r\n    const formData = new FormData()\r\n    formData.append('id', data.id)\r\n    if(data.updateImage){\r\n      formData.append('myImage', data.image)\r\n      formData.append('updateImage', 'true')\r\n    }\r\n    else{\r\n      formData.append('updateImage', 'false')\r\n    }\r\n\r\n    formData.append('title', data.title)\r\n    formData.append('description', data.description)\r\n\r\n    // axios.post(config.baseURLApi+'updateBlog', formData, { // receive two parameter endpoint url ,form data\r\n    // })\r\n    axios.post(config.baseURLApi+'updateBlog', formData, { // receive two parameter endpoint url ,form data\r\n    })\r\n    .then((response) => {\r\n      dispatch(fetchBlogs())\r\n    })\r\n    .catch((error) => {\r\n      dispatch(fetchBlogsFailure(error))\r\n    });\r\n    // axios.post( config.baseURLApi+\"updateBlog/\", {id: data.id, title: data.title, description: data.description})\r\n    // .then((response) => {\r\n    //   window.location.reload();\r\n    // })\r\n    // .catch((error) => {\r\n    //   dispatch(fetchBlogsFailure(error))\r\n    // });\r\n    }\r\n}\r\n\r\nexport function getBlog(data) {\r\n  return (dispatch) => {\r\n    axios({\r\n      method: 'get',\r\n      url: config.baseURLApi+\"get_blog/\"+data.id,\r\n      })\r\n    .then((response) => {\r\n      const mimeType = 'image/*';\r\n      var ary = '';\r\n      const buffer = response.data.data.image;\r\n      console.log(buffer);\r\n      if(response.data.data.image != null){\r\n        console.log(\"if\");\r\n        const b64 = new Buffer(buffer).toString('base64')\r\n        ary=`data:${mimeType};base64,${b64}`\r\n      }\r\n\r\n      dispatch(editBlogsSuccess(response.data.data, ary));\r\n      return response.data.data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(fetchBlogsFailure(error))\r\n    });\r\n    }\r\n}\r\n\r\nexport function deleteBlog(data) {\r\n  return (dispatch) => {\r\n    axios({\r\n      method: 'delete',\r\n      url: config.baseURLApi+\"delete_blog/\"+data.id,\r\n      })\r\n    .then((response) => {\r\n      // return response.data.data;\r\n      dispatch(fetchBlogs())\r\n    })\r\n    .catch((error) => {\r\n      dispatch(fetchBlogsFailure(error))\r\n    });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// Handle HTTP errors since fetch won't.\r\nfunction handleErrors(response) {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}