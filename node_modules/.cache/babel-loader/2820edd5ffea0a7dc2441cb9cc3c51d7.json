{"ast":null,"code":"import _toConsumableArray from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { FETCH_TESTS_BEGIN, FETCH_TESTS_SUCCESS, FETCH_TESTS_FAILURE, EDIT_TESTS_SUCCESS, FETCH_PAID_TESTS_SUCCESS, CREATE_PAID_TEST_SUCCESS, UPDATE_TEST_PDF_SUCCESS } from '../actions/test';\nvar initialState = {\n  tests: [],\n  paid_tests: [],\n  temp: []\n};\nexport default function testReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_TESTS_BEGIN:\n      console.log(\"begin\"); // Mark the state as \"loading\" so we can show a spinner or something\n      // Also, reset any errors. We're starting fresh.\n\n      return _objectSpread({}, state, {\n        loading: true,\n        error: null\n      });\n\n    case FETCH_TESTS_SUCCESS:\n      return Object.assign({}, state, {\n        tests: action.payload.tests\n      });\n\n    case CREATE_PAID_TEST_SUCCESS:\n      return Object.assign({}, state, {\n        paid_tests: [].concat(_toConsumableArray(state.paid_tests), [action.payload.paid_tests])\n      });\n\n    case UPDATE_TEST_PDF_SUCCESS:\n      return Object.assign({}, state, {\n        paid_tests: state.paid_tests.map(function (obj) {\n          return action.payload.test.find(function (o) {\n            return o.id === obj.id;\n          }) || obj;\n        })\n      });\n\n    case FETCH_PAID_TESTS_SUCCESS:\n      return Object.assign({}, state, {\n        paid_tests: action.payload.paid_tests\n      });\n\n    case FETCH_TESTS_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload.error,\n        tests: []\n      });\n\n    case EDIT_TESTS_SUCCESS:\n      // All done: set loading \"false\".\n      // Also, replace the tests with the ones from the server\n      return _objectSpread({}, state, {\n        loading: false,\n        test: action.payload.tests,\n        ary_url: action.payload.ary\n      });\n\n    default:\n      // ALWAYS have a default case in a reducer\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/30-12/setup 2 new/final file/src/reducers/test.js"],"names":["FETCH_TESTS_BEGIN","FETCH_TESTS_SUCCESS","FETCH_TESTS_FAILURE","EDIT_TESTS_SUCCESS","FETCH_PAID_TESTS_SUCCESS","CREATE_PAID_TEST_SUCCESS","UPDATE_TEST_PDF_SUCCESS","initialState","tests","paid_tests","temp","testReducer","state","action","type","console","log","loading","error","Object","assign","payload","map","obj","test","find","o","id","ary_url","ary"],"mappings":";;AAAA,SACEA,iBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,kBAJF,EAKEC,wBALF,EAMEC,wBANF,EAOEC,uBAPF,QAQO,iBARP;AAUA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,EAFO;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,eAAe,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAChE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKd,iBAAL;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADA,CAEE;AACA;;AACA,+BACKJ,KADL;AAEEK,QAAAA,OAAO,EAAE,IAFX;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAMF,SAAKjB,mBAAL;AACE,aAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC5BJ,QAAAA,KAAK,EAAEK,MAAM,CAACQ,OAAP,CAAeb;AADM,OAAzB,CAAP;;AAIF,SAAKH,wBAAL;AACE,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC5BH,QAAAA,UAAU,+BAAMG,KAAK,CAACH,UAAZ,IAAwBI,MAAM,CAACQ,OAAP,CAAeZ,UAAvC;AADkB,OAAzB,CAAP;;AAIF,SAAKH,uBAAL;AACI,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC5BH,QAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,CAAiBa,GAAjB,CAAqB,UAAAC,GAAG;AAAA,iBAAIV,MAAM,CAACQ,OAAP,CAAeG,IAAf,CAAoBC,IAApB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,EAAF,KAASJ,GAAG,CAACI,EAAjB;AAAA,WAA1B,KAAkDJ,GAAtD;AAAA,SAAxB;AADgB,OAAzB,CAAP;;AAIJ,SAAKnB,wBAAL;AACE,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC5BH,QAAAA,UAAU,EAAEI,MAAM,CAACQ,OAAP,CAAeZ;AADC,OAAzB,CAAP;;AAIF,SAAKP,mBAAL;AACE,+BACKU,KADL;AAEEK,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,KAAK,EAAEL,MAAM,CAACQ,OAAP,CAAeH,KAHxB;AAIEV,QAAAA,KAAK,EAAE;AAJT;;AAOF,SAAKL,kBAAL;AACE;AACA;AACA,+BACKS,KADL;AAEEK,QAAAA,OAAO,EAAE,KAFX;AAGEO,QAAAA,IAAI,EAAEX,MAAM,CAACQ,OAAP,CAAeb,KAHvB;AAIEoB,QAAAA,OAAO,EAAEf,MAAM,CAACQ,OAAP,CAAeQ;AAJ1B;;AAMF;AACE;AACA,aAAOjB,KAAP;AAlDJ;AAoDD","sourcesContent":["import {\r\n  FETCH_TESTS_BEGIN,\r\n  FETCH_TESTS_SUCCESS,\r\n  FETCH_TESTS_FAILURE,\r\n  EDIT_TESTS_SUCCESS,\r\n  FETCH_PAID_TESTS_SUCCESS,\r\n  CREATE_PAID_TEST_SUCCESS,\r\n  UPDATE_TEST_PDF_SUCCESS\r\n} from '../actions/test';\r\n\r\nconst initialState = {\r\n  tests: [],\r\n  paid_tests: [],\r\n  temp: [],\r\n};\r\n\r\nexport default function testReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case FETCH_TESTS_BEGIN:\r\n    console.log(\"begin\");\r\n      // Mark the state as \"loading\" so we can show a spinner or something\r\n      // Also, reset any errors. We're starting fresh.\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case FETCH_TESTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n          tests: action.payload.tests,\r\n      });\r\n\r\n    case CREATE_PAID_TEST_SUCCESS:\r\n      return Object.assign({}, state, {\r\n          paid_tests: [...state.paid_tests, action.payload.paid_tests]\r\n      });\r\n\r\n    case UPDATE_TEST_PDF_SUCCESS:\r\n        return Object.assign({}, state, {\r\n            paid_tests: state.paid_tests.map(obj => action.payload.test.find(o => o.id === obj.id) || obj)\r\n        });\r\n\r\n    case FETCH_PAID_TESTS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n          paid_tests: action.payload.paid_tests,\r\n      });\r\n\r\n    case FETCH_TESTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        tests: []\r\n      };\r\n\r\n    case EDIT_TESTS_SUCCESS:\r\n      // All done: set loading \"false\".\r\n      // Also, replace the tests with the ones from the server\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        test: action.payload.tests,\r\n        ary_url: action.payload.ary\r\n      };\r\n    default:\r\n      // ALWAYS have a default case in a reducer\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}