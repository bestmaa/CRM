{"ast":null,"code":"import _toConsumableArray from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\30-12\\\\setup 2 new\\\\final file\\\\src\\\\pages\\\\appoiment\\\\Appoiment.js\";\nimport React from \"react\"; // import { Table, Input, Button, Space } from 'antd';\n// import Highlighter from 'react-highlight-words';\n// import { SearchOutlined } from '@ant-design/icons';\n\nimport { Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Table, Input, Button, Badge, Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport s from \"./Dashboard.module.scss\";\nimport Widget from \"../../components/Widget\";\nimport stocksImg from \"../../images/stocks.svg\";\nimport { createAppoinment, fetchAppoinment, getAppoinment, deleteAppoinment, updateAppoinment } from \"../../actions/appoinment\";\nimport { fetchOfflineUsers, fetchDoctors } from \"../../actions/user\";\nimport ReactQuill from 'react-quill';\nimport { toast, ToastContainer } from 'react-toastify';\nimport FileSaver from 'file-saver';\nimport Swal from 'sweetalert2';\n\nvar validator = require(\"email-validator\");\n\nvar date = new Date();\nvar formatedDate = \"\".concat(date.getFullYear(), \"-\").concat(date.getMonth() + 1, \"-\").concat(date.getDate());\n\nvar Appoiment = /*#__PURE__*/function (_React$Component) {\n  _inherits(Appoiment, _React$Component);\n\n  function Appoiment() {\n    var _this;\n\n    _classCallCheck(this, Appoiment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Appoiment).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"onFileChange\", function (event) {\n      Swal.fire({\n        icon: 'error',\n        type: 'error',\n        text: 'Work In progress',\n        showConfirmButton: true\n      }); // this.setState({ selectedFile: event.target.files[0]})\n      // Set File Type\n      // setFileType('pdf');\n      // File Reader\n      // const reader = new FileReader();\n      // File Reader: On Load\n      // reader.onload = () => {\n      // File Data (Binary String)\n      // const fileData = reader.result;\n      // HOW CAN I CONVERT THE BINARY STRING TO TEXT?\n      // HOW CAN I CONVERT THE BINARY STRING TO TEXT?\n      // HOW CAN I CONVERT THE BINARY STRING TO TEXT?\n      // Parsed Results\n      // const parsedResults = null;\n      // Set File\n      // setFile(parsedResults);\n      // };\n      // File Reader: Read As Binary String\n      // reader.readAsBinaryString(acceptedFiles[0]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEdit\", function (event, row) {\n      event.preventDefault();\n\n      _this.props.dispatch(getAppoinment({\n        id: row.id\n      }));\n\n      _this.setState({\n        modal: true\n      });\n\n      var date = new Date(row.date);\n      var formated_Date = \"\".concat(date.getFullYear(), \"-\").concat(date.getMonth() + 1, \"-\").concat(date.getDate() - 1);\n\n      _this.setState({\n        id: row.id,\n        user_Patient: row.patientID,\n        user_Doctor: row.doctorID,\n        ShiftDate: formated_Date,\n        Doctor_shift: row.time,\n        interval_time: row.interval_time\n      }); // this.createShiftItemsForDoctors()\n\n\n      var weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wensday\", \"Thrusday\", \"Friday\", \"Saturday\"];\n      var date = new Date(row.date);\n      var n = date.getDay();\n      var weekDAy = weekday[n];\n\n      _this.setState({\n        weekDay: weekDAy\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDelete\", function (event, id) {\n      event.preventDefault();\n\n      if (window.confirm(\"Delete the item?\")) {\n        _this.props.dispatch(deleteAppoinment({\n          id: id\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createSelectItemsUser\", function () {\n      var items = [];\n      items.push( /*#__PURE__*/React.createElement(\"option\", {\n        key: -1,\n        value: \"\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, \"Select Patients\"));\n\n      for (var i = 0; i < _this.props.users.length; i++) {\n        console.log(i);\n        items.push( /*#__PURE__*/React.createElement(\"option\", {\n          key: _this.props.users[i].id,\n          value: _this.props.users[i].id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 20\n          }\n        }, _this.props.users[i].first_name, \" \", _this.props.users[i].last_name));\n      }\n\n      return items;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createSelectItemsDoctors\", function () {\n      console.log(\"this.props.doctors\", _this.props.doctors);\n      var items = [];\n      items.push( /*#__PURE__*/React.createElement(\"option\", {\n        key: -1,\n        value: \"\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 16\n        }\n      }, \"Select Doctors\"));\n\n      for (var i = 0; i < _this.props.doctors.length; i++) {\n        console.log(i);\n        items.push( /*#__PURE__*/React.createElement(\"option\", {\n          key: _this.props.doctors[i].id,\n          value: _this.props.doctors[i].id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }\n        }, _this.props.doctors[i].first_name, \" \", _this.props.doctors[i].last_name));\n      }\n\n      return items;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createShiftItemsForDoctors\", function () {\n      var items = [];\n      items.push( /*#__PURE__*/React.createElement(\"option\", {\n        key: -1,\n        value: \"\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 18\n        }\n      }, \"Select Shift\"));\n\n      for (var i = 0; i < _this.props.doctors.length; i++) {\n        if (_this.props.doctors[i].id == _this.state.user_Doctor) {\n          var schedule = _this.props.doctors[i].schedule !== null ? JSON.parse(_this.props.doctors[i].schedule) : '';\n\n          for (var j = 0; j < schedule.length; j++) {\n            if (schedule[j].day == _this.state.weekDay) {\n              items.push( /*#__PURE__*/React.createElement(\"option\", {\n                key: schedule[j].shiftone[0],\n                value: schedule[j].shiftone[0] + ' - ' + schedule[j].shiftone[1],\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 26\n                }\n              }, schedule[j].shiftone[0], \" - \", schedule[j].shiftone[1]));\n              items.push( /*#__PURE__*/React.createElement(\"option\", {\n                key: schedule[j].shifttwo[0],\n                value: schedule[j].shifttwo[0] + ' - ' + schedule[j].shifttwo[1],\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 26\n                }\n              }, schedule[j].shifttwo[0], \" - \", schedule[j].shifttwo[1]));\n            }\n          }\n        }\n      }\n\n      return items; // this.setState({AllShift : items})\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createSelectItemsTest\", function () {\n      var items = [];\n\n      for (var i = 0; i < _this.props.tests.length; i++) {\n        items.push( /*#__PURE__*/React.createElement(\"option\", {\n          key: _this.props.tests[i].id,\n          value: _this.props.tests[i].id,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 22\n          }\n        }, _this.props.tests[i].name));\n      }\n\n      return items;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createIntervalTimeForDoctors\", function () {\n      // var j = [];\n      // var l = parseInt(res[0]);\n      // var m = 0;\n      // for(var i = 0; i < resTime; i++ ){\n      //   l = parseInt(res[0]) + i + 1;\n      //   m = parseInt(res[0]) + i;\n      //   j.push('<li>'+m+'-'+l+'</li>');\n      // }\n      var items = [];\n      var k = _this.state.Doctor_shift;\n      var res = k.split(\" - \");\n      var resTime = parseInt(res[1]) - parseInt(res[0]);\n      var j = [];\n      var l = parseInt(res[0]);\n      var m = 0;\n\n      if (resTime > 0) {\n        items.push( /*#__PURE__*/React.createElement(\"option\", {\n          key: 0,\n          value: \"default\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 20\n          }\n        }, \"Default\"));\n\n        for (var i = 0; i < resTime; i++) {\n          l = parseInt(res[0]) + i + 1;\n          m = parseInt(res[0]) + i;\n          var opt = m + '-' + l;\n          items.push( /*#__PURE__*/React.createElement(\"option\", {\n            key: i,\n            value: opt,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 24\n            }\n          }, opt));\n        }\n      }\n\n      return items;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertDateFormate\", function (val) {\n      var date = new Date(val);\n      var formatedDate = \"\".concat(date.getFullYear(), \"-\").concat(date.getMonth() + 1, \"-\").concat(date.getDate());\n      return formatedDate;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"SelectDate\", function (e) {\n      _this.setState({\n        ShiftDate: e.target.value\n      });\n\n      var weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wensday\", \"Thrusday\", \"Friday\", \"Saturday\"];\n      var date = new Date(e.target.value);\n      var n = date.getDay();\n      var weekDAy = weekday[n];\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      var year = date.getFullYear();\n\n      _this.setState({\n        weekDay: weekDAy,\n        Doctor_shift: ''\n      });\n\n      console.log(\"date\", e.target.value, date, formatedDate); //  this.createShiftItemsForDoctors()\n      // alert([this.state.user_Doctor,weekDAy, day, month, year].join('/'));\n      // let items = [];\n      //   for (let i = 0; i < this.props.doctors.length; i++) {\n      //     if(this.props.doctors[i].id == this.state.user_Doctor){\n      //       var schedule = this.state.user_Doctor.schedule !== null ? JSON.parse(this.state.user_Doctor.schedule) : '';\n      //       for (let j = 0; j < schedule.length; j++) {\n      //         if(schedule[j].day == weekDAy){\n      //           items.push(<option key={j} value={schedule[j].shiftone[0] +' - '+schedule[j].shiftone[1]} >{schedule[j].shiftone[0] } - {schedule[j].shiftone[1]}</option>);\n      //           items.push(<option key={j} value={schedule[j].shifttwo[0] +' - '+schedule[j].shifttwo[1]} >{schedule[j].shifttwo[0] } - {schedule[j].shifttwo[1]}</option>);\n      //         }\n      //       }\n      //   }\n      //   // return items;\n      // }\n      // this.setState({AllShift: items});\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createAppoinment\", function (event) {\n      event.preventDefault();\n\n      if (_this.props.appoinment == null && _this.state.id == 0) {\n        _this.props.dispatch(createAppoinment({\n          patient_id: _this.state.user_Patient,\n          doctor_id: _this.state.user_Doctor,\n          date: _this.state.ShiftDate,\n          time: _this.state.Doctor_shift,\n          interval_time: _this.state.interval_time\n        }));\n      } else {\n        _this.props.dispatch(updateAppoinment({\n          id: _this.state.id,\n          patient_id: _this.state.user_Patient,\n          doctor_id: _this.state.user_Doctor,\n          date: _this.state.ShiftDate,\n          time: _this.state.Doctor_shift,\n          interval_time: _this.state.interval_time\n        }));\n      }\n\n      _this.props.dispatch(fetchAppoinment());\n\n      _this.setState({\n        modal: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"get_user_name\", function (condition) {\n      // console.log(condition);\n      var fname = '';\n\n      _this.props.users.filter(function (e) {\n        return e.id === condition;\n      }).map(function (key, i) {\n        return fname = key.first_name + \" \" + key.last_name;\n      });\n\n      return fname;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"get_doctor_name\", function (condition) {\n      // console.log(condition);\n      var fname = '';\n\n      _this.props.doctors.filter(function (e) {\n        return e.id === condition;\n      }).map(function (key, i) {\n        return fname = key.first_name + \" \" + key.last_name;\n      });\n\n      return fname;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.setState({\n        title: '',\n        description: '',\n        imgurl: '',\n        Date: '',\n        user_Doctor: 0,\n        user_Patient: 0,\n        weekDay: '',\n        Doctor_shift: '',\n        interval_time: '',\n        ShiftDate: '',\n        AllShift: [],\n        id: 0\n      });\n\n      _this.setState({\n        modal: !_this.state.modal\n      }); // var date = new Date();\n      // var formated_Date = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()-1}`\n      // this.setState({\n      //   user_Patient: this.state.patientID,\n      //   user_Doctor: this.state.doctorID,\n      //   ShiftDate: formated_Date,\n      //   Doctor_shift: this.state.time,\n      // })\n      // // this.createShiftItemsForDoctors()\n      // var weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wensday\", \"Thrusday\", \"Friday\", \"Saturday\"];\n      // var date = new Date(date);\n      //  var n =  date.getDay()\n      //  var weekDAy = weekday[n];\n      //  this.setState({weekDay: weekDAy});\n\n    });\n\n    _this.state = {\n      modal: false,\n      user: 0,\n      test: 0,\n      selectedFile: null,\n      ShiftDate: '',\n      user_Doctor: 0,\n      user_Patient: 0,\n      weekDay: '',\n      Doctor_shift: '',\n      interval_time: '',\n      AllShift: [],\n      id: 0,\n      searchText: '',\n      searchedColumn: '',\n      currentPage: 0,\n      pageSize: 20,\n      pagesCount: 0\n    };\n    return _this;\n  }\n\n  _createClass(Appoiment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.dispatch(fetchTests());\n      this.props.dispatch(fetchOfflineUsers());\n      this.props.dispatch(fetchAppoinment());\n      this.props.dispatch(fetchDoctors()); // this.createShiftItemsForDoctors()\n    }\n  }, {\n    key: \"onDropdownSelectedUser\",\n    value: function onDropdownSelectedUser(e) {\n      console.log(\"THE VAL\", e.target.value);\n      this.setState({\n        user_Patient: e.target.value\n      }); //here you will see the current selected value of the select input\n    }\n  }, {\n    key: \"onDropdownSelectedDoctors\",\n    value: function onDropdownSelectedDoctors(e) {\n      this.setState({\n        user_Doctor: e.target.value,\n        Doctor_shift: ''\n      }); //  this.createShiftItemsForDoctors()\n    }\n  }, {\n    key: \"onDropdownShiftItemsForDoctors\",\n    value: function onDropdownShiftItemsForDoctors(e) {\n      this.setState({\n        Doctor_shift: e.target.value\n      });\n      console.log(\"Doctor_shift\", e.target.value);\n    }\n  }, {\n    key: \"onDropdownIntervalTimeForDoctors\",\n    value: function onDropdownIntervalTimeForDoctors(e) {\n      this.setState({\n        interval_time: e.target.value\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    // getColumnSearchProps = dataIndex => ({\n    //   filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    //     <div style={{ padding: 8 }}>\n    //       <Input\n    //         ref={node => {\n    //           this.searchInput = node;\n    //         }}\n    //         placeholder={`Search ${dataIndex}`}\n    //         value={selectedKeys[0]}\n    //         onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n    //         onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n    //         style={{ width: 188, marginBottom: 8, display: 'block' }}\n    //       />\n    //       <Space>\n    //         <Button\n    //           type=\"primary\"\n    //           onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n    //           icon={<SearchOutlined />}\n    //           size=\"small\"\n    //           style={{ width: 90 }}\n    //         >\n    //           Search\n    //         </Button>\n    //         <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n    //           Reset\n    //         </Button>\n    //       </Space>\n    //     </div>\n    //   ),\n    //   filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    //   onFilter: (value, record) =>\n    //     record[dataIndex]\n    //       ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n    //       : '',\n    //   onFilterDropdownVisibleChange: visible => {\n    //     if (visible) {\n    //       setTimeout(() => this.searchInput.select(), 100);\n    //     }\n    //   },\n    //   render: text =>\n    //     this.state.searchedColumn === dataIndex ? (\n    //       <Highlighter\n    //         highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n    //         searchWords={[this.state.searchText]}\n    //         autoEscape\n    //         textToHighlight={text ? text.toString() : ''}\n    //       />\n    //     ) : (\n    //       text\n    //     ),\n    // });\n    // handleSearch = (selectedKeys, confirm, dataIndex) => {\n    //   confirm();\n    //   this.setState({\n    //     searchText: selectedKeys[0],\n    //     searchedColumn: dataIndex,\n    //   });\n    // };\n    // handleReset = clearFilters => {\n    //   clearFilters();\n    //   this.setState({ searchText: '' });\n    // };\n    value: function handleClick(e, index) {\n      e.preventDefault();\n      this.setState({\n        currentPage: index\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          tests = _this$props.tests,\n          paid_tests = _this$props.paid_tests,\n          users = _this$props.users,\n          appoinments = _this$props.appoinments;\n      var currentPage = this.state.currentPage;\n      var pagesCount = Math.ceil(appoinments.length / this.state.pageSize);\n      console.log(\"paid_tests\", this.state); // const columns = [\n      //   {\n      //     title: 'Patients',\n      //     key: 'Patients',\n      //     render: (text, row) => (\n      //       <>\n      //         <span>{this.get_user_name(row.patientID)}</span>\n      //       </>\n      //     ),\n      //     ...this.getColumnSearchProps('name'),\n      //   },\n      //   {\n      //     title: 'Doctor',\n      //     key: 'doctor',\n      //     render: (text, row) => (\n      //       <>\n      //         <span>{this.get_doctor_name(row.doctorID)}</span>\n      //       </>\n      //     ),\n      //   },\n      //   {\n      //     title: 'Date',\n      //     key: 'Date',\n      //     render: (text, row) => (\n      //       <>\n      //         <span>{this.convertDateFormate(row.date)}</span>\n      //       </>\n      //     ),\n      //   },\n      //   {\n      //     title: 'Shift',\n      //     key: 'time',\n      //     dataIndex: 'time',\n      //   },\n      //   {\n      //     title: 'Time',\n      //     key: 'interval_time',\n      //     dataIndex: 'interval_time',\n      //   },\n      //   {\n      //     title: 'Action',\n      //     key: 'action',\n      //     render: (text, row) => (\n      //       <Space size=\"middle\">\n      //         <a onClick={event => this.onEdit(event, row)}><img src={require(\"../../images/edit.png\")} width=\"20\" height=\"25\" /></a>\n      //         <a onClick={event => this.onDelete(event, row.id)}><img src={require(\"../../images/delete.png\")} width=\"40\" height=\"25\"/></a>\n      //       </Space>\n      //     ),\n      //   },\n      // ];\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: s.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 4,\n        style: {\n          paddingBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }\n      }, \"Create\"), ' ')), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }\n      }, appoinments.length > 0 ? /*#__PURE__*/React.createElement(Widget, {\n        title: /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontWeight: 700\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 22\n          }\n        }, \"Appointment\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        responsive: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"fs-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 21\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 21\n        }\n      }, \"Patients\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }\n      }, \"Doctors\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 21\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 21\n        }\n      }, \"Shift\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"hidden-sm-down\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 21\n        }\n      }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 17\n        }\n      }, appoinments.map(function (row) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: row.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 23\n          }\n        }, row.id), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 23\n          }\n        }, _this2.get_user_name(row.patientID)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 23\n          }\n        }, _this2.get_doctor_name(row.doctorID)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 23\n          }\n        }, _this2.convertDateFormate(row.date)), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 23\n          }\n        }, row.time), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 23\n          }\n        }, row.interval_time), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick(event) {\n            return _this2.onEdit(event, row);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: require(\"../../images/edit.png\"),\n          width: \"20\",\n          height: \"25\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 71\n          }\n        })), /*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick(event) {\n            return _this2.onDelete(event, row.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: require(\"../../images/delete.png\"),\n          width: \"40\",\n          height: \"25\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 76\n          }\n        }))));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pagination-wrapper\",\n        style: {\n          float: 'right',\n          fontSize: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Pagination, {\n        \"aria-label\": \"Page navigation example\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(PaginationItem, {\n        disabled: currentPage <= 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(PaginationLink, {\n        onClick: function onClick(e) {\n          return _this2.handleClick(e, currentPage - 1);\n        },\n        previous: true,\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 21\n        }\n      })), _toConsumableArray(Array(pagesCount)).map(function (page, i) {\n        return /*#__PURE__*/React.createElement(PaginationItem, {\n          active: i === currentPage,\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PaginationLink, {\n          onClick: function onClick(e) {\n            return _this2.handleClick(e, i);\n          },\n          href: \"#\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 23\n          }\n        }, i + 1));\n      }), /*#__PURE__*/React.createElement(PaginationItem, {\n        disabled: currentPage >= pagesCount - 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(PaginationLink, {\n        onClick: function onClick(e) {\n          return _this2.handleClick(e, currentPage + 1);\n        },\n        next: true,\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 21\n        }\n      }))))) : /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontWeight: 700\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 15\n        }\n      }, \"NO DATA FOUND\"))), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }\n      }, this.state.id == 0 ? 'Create Appointment' : 'Edit Appointment'), /*#__PURE__*/React.createElement(ModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 15\n        }\n      }, \"Patients\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        onChange: function onChange(e) {\n          return _this2.onDropdownSelectedUser(e);\n        },\n        label: \"Users\",\n        value: this.state.user_Patient,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 15\n        }\n      }, this.createSelectItemsUser())), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"Doctors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 15\n        }\n      }, \"Doctors\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        onChange: function onChange(e) {\n          return _this2.onDropdownSelectedDoctors(e);\n        },\n        label: \"Doctors\",\n        value: this.state.user_Doctor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 15\n        }\n      }, this.createSelectItemsDoctors())), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 15\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"date\",\n        name: \"Date\",\n        id: \"Date\",\n        min: formatedDate // defaultValue={this.state.Date}\n        ,\n        value: this.state.ShiftDate,\n        onChange: function onChange(e) {\n          return _this2.SelectDate(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"Doctors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 15\n        }\n      }, \"Shift\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        onChange: function onChange(e) {\n          return _this2.onDropdownShiftItemsForDoctors(e);\n        },\n        label: \"Doctors\",\n        value: this.state.Doctor_shift,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 15\n        }\n      }, this.createShiftItemsForDoctors())), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"Doctors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 15\n        }\n      }, \"Interval Time\"), /*#__PURE__*/React.createElement(Input, {\n        type: \"select\",\n        onChange: function onChange(e) {\n          return _this2.onDropdownIntervalTimeForDoctors(e);\n        },\n        label: \"Doctors\",\n        value: this.state.interval_time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 15\n        }\n      }, this.createIntervalTimeForDoctors()))), /*#__PURE__*/React.createElement(ModalFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick(event) {\n          return _this2.createAppoinment(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 13\n        }\n      }, this.state.id == 0 ? 'Create' : 'Update'), ' ', /*#__PURE__*/React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 13\n        }\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return Appoiment;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    // tests: state.test.tests,\n    // paid_tests: state.test.paid_tests,\n    users: state.auth.offline_users,\n    doctors: state.auth.doctors,\n    appoinments: state.appoinment.appoinments,\n    appoinment: state.appoinment.appoinment\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Appoiment));","map":{"version":3,"sources":["D:/30-12/setup 2 new/final file/src/pages/appoiment/Appoiment.js"],"names":["React","Row","Col","Modal","ModalHeader","ModalBody","ModalFooter","Table","Input","Button","Badge","Pagination","PaginationItem","PaginationLink","withRouter","Redirect","Link","connect","axios","s","Widget","createAppoinment","fetchAppoinment","getAppoinment","deleteAppoinment","updateAppoinment","fetchOfflineUsers","fetchDoctors","ReactQuill","toast","ToastContainer","FileSaver","Swal","validator","require","date","Date","formatedDate","getFullYear","getMonth","getDate","Appoiment","event","fire","icon","type","text","showConfirmButton","row","preventDefault","props","dispatch","id","setState","modal","formated_Date","user_Patient","patientID","user_Doctor","doctorID","ShiftDate","Doctor_shift","time","interval_time","weekday","n","getDay","weekDAy","weekDay","window","confirm","items","push","i","users","length","console","log","first_name","last_name","doctors","state","schedule","JSON","parse","j","day","shiftone","shifttwo","tests","name","k","res","split","resTime","parseInt","l","m","opt","val","e","target","value","month","year","appoinment","patient_id","doctor_id","condition","fname","filter","map","key","title","description","imgurl","AllShift","user","test","selectedFile","searchText","searchedColumn","currentPage","pageSize","pagesCount","index","paid_tests","appoinments","Math","ceil","root","paddingBottom","toggle","fontWeight","get_user_name","get_doctor_name","convertDateFormate","onEdit","onDelete","float","fontSize","handleClick","Array","page","onDropdownSelectedUser","createSelectItemsUser","onDropdownSelectedDoctors","createSelectItemsDoctors","SelectDate","onDropdownShiftItemsForDoctors","createShiftItemsForDoctors","onDropdownIntervalTimeForDoctors","createIntervalTimeForDoctors","Component","mapStateToProps","auth","offline_users"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import { Table, Input, Button, Space } from 'antd';\r\n// import Highlighter from 'react-highlight-words';\r\n// import { SearchOutlined } from '@ant-design/icons';\r\nimport { Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Table, Input, Button, Badge, Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\r\nimport { withRouter, Redirect, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport s from \"./Dashboard.module.scss\";\r\nimport Widget from \"../../components/Widget\";\r\nimport stocksImg from \"../../images/stocks.svg\";\r\nimport { createAppoinment,fetchAppoinment, getAppoinment, deleteAppoinment, updateAppoinment } from \"../../actions/appoinment\";\r\nimport { fetchOfflineUsers,fetchDoctors } from \"../../actions/user\";\r\nimport ReactQuill from 'react-quill';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport FileSaver from 'file-saver';\r\nimport Swal from 'sweetalert2';\r\nvar validator = require(\"email-validator\");\r\nvar date = new Date();\r\n\r\nvar formatedDate = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\r\n\r\nclass Appoiment extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      modal: false,\r\n      user: 0,\r\n      test: 0,\r\n      selectedFile: null,\r\n      ShiftDate : '',\r\n      user_Doctor : 0,\r\n      user_Patient : 0,\r\n      weekDay : '',\r\n      Doctor_shift : '',\r\n      interval_time : '',\r\n      AllShift : [],\r\n      id : 0,\r\n      searchText: '',\r\n    searchedColumn: '',\r\n    currentPage: 0,\r\n      pageSize : 20,\r\n      pagesCount :  0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.props.dispatch(fetchTests());\r\n    this.props.dispatch(fetchOfflineUsers());\r\n    this.props.dispatch(fetchAppoinment());\r\n    this.props.dispatch(fetchDoctors());\r\n    // this.createShiftItemsForDoctors()\r\n  }\r\n\r\n\r\n  onFileChange = event => {\r\n    Swal.fire({\r\n        icon: 'error',\r\n        type: 'error',\r\n        text: 'Work In progress',\r\n        showConfirmButton: true,\r\n    });\r\n    // this.setState({ selectedFile: event.target.files[0]})\r\n    // Set File Type\r\n  // setFileType('pdf');\r\n\r\n  // File Reader\r\n  // const reader = new FileReader();\r\n\r\n  // File Reader: On Load\r\n  // reader.onload = () => {\r\n\r\n    // File Data (Binary String)\r\n    // const fileData = reader.result;\r\n\r\n    // HOW CAN I CONVERT THE BINARY STRING TO TEXT?\r\n    // HOW CAN I CONVERT THE BINARY STRING TO TEXT?\r\n    // HOW CAN I CONVERT THE BINARY STRING TO TEXT?\r\n\r\n    // Parsed Results\r\n    // const parsedResults = null;\r\n\r\n    // Set File\r\n    // setFile(parsedResults);\r\n  // };\r\n\r\n  // File Reader: Read As Binary String\r\n  // reader.readAsBinaryString(acceptedFiles[0]);\r\n  }\r\n\r\n  onEdit = (event, row) => {\r\n    event.preventDefault();\r\n    this.props.dispatch(getAppoinment({id: row.id}));\r\n\r\n\r\n    this.setState({ modal: true})\r\n    var date = new Date(row.date);\r\n    var formated_Date = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()-1}`\r\n\r\n    this.setState({\r\n      id: row.id,\r\n      user_Patient: row.patientID,\r\n      user_Doctor: row.doctorID,\r\n      ShiftDate: formated_Date,\r\n      Doctor_shift: row.time,\r\n      interval_time : row.interval_time\r\n    })\r\n    // this.createShiftItemsForDoctors()\r\n    var weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wensday\", \"Thrusday\", \"Friday\", \"Saturday\"];\r\n    var date = new Date(row.date);\r\n     var n =  date.getDay()\r\n     var weekDAy = weekday[n];\r\n     this.setState({weekDay: weekDAy});\r\n  }\r\n\r\n  onDelete = (event, id) => {\r\n    event.preventDefault();\r\n    if (window.confirm(\"Delete the item?\")) {\r\n      this.props.dispatch(deleteAppoinment({id: id}));\r\n    }\r\n  }\r\n\r\n  createSelectItemsUser = () => {\r\n     let items = [];\r\n     items.push(<option key={-1} value='' >Select Patients</option>);\r\n     for (let i = 0; i < this.props.users.length; i++) {\r\n       console.log(i);\r\n        items.push(<option key={this.props.users[i].id} value={this.props.users[i].id} >{this.props.users[i].first_name} {this.props.users[i].last_name}</option>);\r\n     }\r\n\r\n     return items;\r\n   }\r\n\r\n   createSelectItemsDoctors = () => {\r\n\r\n    console.log(\"this.props.doctors\",this.props.doctors)\r\n    let items = [];\r\n    items.push(<option key={-1} value='' >Select Doctors</option>);\r\n    for (let i = 0; i < this.props.doctors.length; i++) {\r\n      console.log(i);\r\n       items.push(<option key={this.props.doctors[i].id} value={this.props.doctors[i].id} >{this.props.doctors[i].first_name} {this.props.doctors[i].last_name}</option>);\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  createShiftItemsForDoctors = () => {\r\n      let items = [];\r\n      items.push(<option key={-1} value='' >Select Shift</option>);\r\n      for (let i = 0; i < this.props.doctors.length; i++) {\r\n\r\n        if(this.props.doctors[i].id == this.state.user_Doctor){\r\n\r\n          var schedule = this.props.doctors[i].schedule !== null ? JSON.parse(this.props.doctors[i].schedule) : '';\r\n\r\n          for (let j = 0; j < schedule.length; j++) {\r\n\r\n            if(schedule[j].day == this.state.weekDay){\r\n              items.push(<option key={schedule[j].shiftone[0]} value={schedule[j].shiftone[0] +' - '+schedule[j].shiftone[1]} >{schedule[j].shiftone[0] } - {schedule[j].shiftone[1]}</option>);\r\n              items.push(<option key={schedule[j].shifttwo[0]} value={schedule[j].shifttwo[0] +' - '+schedule[j].shifttwo[1]} >{schedule[j].shifttwo[0] } - {schedule[j].shifttwo[1]}</option>);\r\n            }\r\n\r\n          }\r\n\r\n      }\r\n\r\n\r\n    }\r\n    return items;\r\n    // this.setState({AllShift : items})\r\n\r\n  }\r\n  createSelectItemsTest = () => {\r\n     let items = [];\r\n     for (let i = 0; i < this.props.tests.length; i++) {\r\n          items.push(<option key={this.props.tests[i].id} value={this.props.tests[i].id}>{this.props.tests[i].name}</option>);\r\n     }\r\n     return items;\r\n   }\r\n\r\n   createIntervalTimeForDoctors = () => {\r\n\r\n\r\n\r\n    // var j = [];\r\n    // var l = parseInt(res[0]);\r\n    // var m = 0;\r\n    // for(var i = 0; i < resTime; i++ ){\r\n    //   l = parseInt(res[0]) + i + 1;\r\n    //   m = parseInt(res[0]) + i;\r\n\r\n    //   j.push('<li>'+m+'-'+l+'</li>');\r\n    // }\r\n\r\n\r\n      let items = [];\r\n      var k = this.state.Doctor_shift;\r\n      var res = k.split(\" - \");\r\n      var resTime = parseInt(res[1]) - parseInt(res[0]);\r\n      var j = [];\r\n      var l = parseInt(res[0]);\r\n      var m = 0;\r\n\r\n      \r\n      if(resTime > 0){\r\n        items.push(<option key={0} value='default'>Default</option>);\r\n        for (let i = 0;  i < resTime; i++) {\r\n          l = parseInt(res[0]) + i + 1;\r\n          m = parseInt(res[0]) + i;\r\n          var opt = m+'-'+l;\r\n            items.push(<option key={i} value={opt}>{opt}</option>);\r\n        }\r\n      }\r\n\r\n      return items;\r\n   }\r\n\r\n   onDropdownSelectedUser(e) {\r\n     console.log(\"THE VAL\", e.target.value);\r\n     this.setState({user_Patient: e.target.value})\r\n       //here you will see the current selected value of the select input\r\n   }\r\n   onDropdownSelectedDoctors(e) {\r\n       this.setState({user_Doctor: e.target.value, Doctor_shift : ''})\r\n      //  this.createShiftItemsForDoctors()\r\n   }\r\n\r\n   onDropdownShiftItemsForDoctors(e) {\r\n    this.setState({Doctor_shift: e.target.value})\r\n\r\n    console.log(\"Doctor_shift\",e.target.value)\r\n\r\n  }\r\n\r\n  onDropdownIntervalTimeForDoctors(e) {\r\n    this.setState({interval_time: e.target.value})\r\n  }\r\n\r\n  convertDateFormate = (val) =>{\r\n    var date = new Date(val);\r\n\r\n    var formatedDate = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\r\n    return formatedDate;\r\n  }\r\n\r\n   SelectDate = (e)=>{\r\n    this.setState({ShiftDate: e.target.value});\r\n    var weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wensday\", \"Thrusday\", \"Friday\", \"Saturday\"];\r\n\r\n\r\n    var date = new Date(e.target.value);\r\n     var n =  date.getDay()\r\n     var weekDAy = weekday[n];\r\n     var day = date.getDate();\r\n     var month = date.getMonth() + 1;\r\n     var year = date.getFullYear();\r\n\r\n     this.setState({weekDay: weekDAy,Doctor_shift : ''});\r\n     console.log(\"date\",e.target.value,date,formatedDate)\r\n    //  this.createShiftItemsForDoctors()\r\n      // alert([this.state.user_Doctor,weekDAy, day, month, year].join('/'));\r\n\r\n\r\n      // let items = [];\r\n      //   for (let i = 0; i < this.props.doctors.length; i++) {\r\n\r\n      //     if(this.props.doctors[i].id == this.state.user_Doctor){\r\n\r\n      //       var schedule = this.state.user_Doctor.schedule !== null ? JSON.parse(this.state.user_Doctor.schedule) : '';\r\n\r\n      //       for (let j = 0; j < schedule.length; j++) {\r\n\r\n      //         if(schedule[j].day == weekDAy){\r\n      //           items.push(<option key={j} value={schedule[j].shiftone[0] +' - '+schedule[j].shiftone[1]} >{schedule[j].shiftone[0] } - {schedule[j].shiftone[1]}</option>);\r\n      //           items.push(<option key={j} value={schedule[j].shifttwo[0] +' - '+schedule[j].shifttwo[1]} >{schedule[j].shifttwo[0] } - {schedule[j].shifttwo[1]}</option>);\r\n      //         }\r\n\r\n      //       }\r\n\r\n      //   }\r\n\r\n      //   // return items;\r\n      // }\r\n\r\n      // this.setState({AllShift: items});\r\n\r\n   }\r\n\r\n   createAppoinment = (event) =>\r\n   {\r\n     event.preventDefault();\r\n\r\n     if(this.props.appoinment == null && this.state.id == 0){\r\n\r\n        this.props.dispatch(createAppoinment({\r\n          patient_id: this.state.user_Patient,\r\n          doctor_id: this.state.user_Doctor,\r\n          date : this.state.ShiftDate,\r\n          time : this.state.Doctor_shift,\r\n          interval_time : this.state.interval_time\r\n\r\n          }));\r\n\r\n      }else{\r\n        this.props.dispatch(updateAppoinment({\r\n          id : this.state.id,\r\n          patient_id: this.state.user_Patient,\r\n          doctor_id: this.state.user_Doctor,\r\n          date : this.state.ShiftDate,\r\n          time : this.state.Doctor_shift,\r\n          interval_time : this.state.interval_time\r\n\r\n          }));\r\n      }\r\n\r\n      this.props.dispatch(fetchAppoinment());\r\n\r\n     this.setState({modal: false})\r\n   }\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   console.log(\"--\", nextProps);\r\n  //   if ( nextProps.appoinment != null  && prevState.id != nextProps.appoinment.id ) {\r\n  //     console.log(\"nextProps.appoinment\",nextProps.appoinment);\r\n  //     var date = new Date(nextProps.appoinment.date);\r\n  //     var formated_Date = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\r\n  //     return {\r\n  //       id: nextProps.appoinment.id,\r\n  //       user_Patient: nextProps.appoinment.patientID,\r\n  //       user_Doctor: nextProps.appoinment.doctorID,\r\n  //       ShiftDate: formated_Date,\r\n  //       Doctor_shift: nextProps.appoinment.time,\r\n  //     };\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  get_user_name = (condition) => {\r\n    // console.log(condition);\r\n    let fname = '';\r\n      this.props.users.filter((e) => e.id === condition).map((key, i) => (\r\n        fname = key.first_name + \" \" + key.last_name\r\n      ))\r\n    return fname\r\n    };\r\n\r\n  get_doctor_name = (condition) => {\r\n    // console.log(condition);\r\n    let fname = '';\r\n      this.props.doctors.filter((e) => e.id === condition).map((key, i) => (\r\n        fname = key.first_name + \" \" + key.last_name\r\n      ))\r\n    return fname\r\n    };\r\n  toggle = () => {\r\n    this.setState({\r\n      title: '',\r\n      description: '',\r\n      imgurl: '',\r\n      Date : '',\r\n      user_Doctor : 0,\r\n      user_Patient : 0,\r\n      weekDay : '',\r\n      Doctor_shift : '',\r\n      interval_time : '',\r\n      ShiftDate : '',\r\n      AllShift : [] ,\r\n      id : 0\r\n    })\r\n    this.setState({ modal: !this.state.modal})\r\n\r\n    // var date = new Date();\r\n    // var formated_Date = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()-1}`\r\n\r\n    // this.setState({\r\n    //   user_Patient: this.state.patientID,\r\n    //   user_Doctor: this.state.doctorID,\r\n    //   ShiftDate: formated_Date,\r\n    //   Doctor_shift: this.state.time,\r\n    // })\r\n    // // this.createShiftItemsForDoctors()\r\n    // var weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wensday\", \"Thrusday\", \"Friday\", \"Saturday\"];\r\n    // var date = new Date(date);\r\n    //  var n =  date.getDay()\r\n    //  var weekDAy = weekday[n];\r\n    //  this.setState({weekDay: weekDAy});\r\n  }\r\n\r\n  // getColumnSearchProps = dataIndex => ({\r\n  //   filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n  //     <div style={{ padding: 8 }}>\r\n  //       <Input\r\n  //         ref={node => {\r\n  //           this.searchInput = node;\r\n  //         }}\r\n  //         placeholder={`Search ${dataIndex}`}\r\n  //         value={selectedKeys[0]}\r\n  //         onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n  //         onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n  //         style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n  //       />\r\n  //       <Space>\r\n  //         <Button\r\n  //           type=\"primary\"\r\n  //           onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n  //           icon={<SearchOutlined />}\r\n  //           size=\"small\"\r\n  //           style={{ width: 90 }}\r\n  //         >\r\n  //           Search\r\n  //         </Button>\r\n  //         <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n  //           Reset\r\n  //         </Button>\r\n  //       </Space>\r\n  //     </div>\r\n  //   ),\r\n  //   filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n  //   onFilter: (value, record) =>\r\n  //     record[dataIndex]\r\n  //       ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n  //       : '',\r\n  //   onFilterDropdownVisibleChange: visible => {\r\n  //     if (visible) {\r\n  //       setTimeout(() => this.searchInput.select(), 100);\r\n  //     }\r\n  //   },\r\n  //   render: text =>\r\n  //     this.state.searchedColumn === dataIndex ? (\r\n  //       <Highlighter\r\n  //         highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n  //         searchWords={[this.state.searchText]}\r\n  //         autoEscape\r\n  //         textToHighlight={text ? text.toString() : ''}\r\n  //       />\r\n  //     ) : (\r\n  //       text\r\n  //     ),\r\n  // });\r\n\r\n  // handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n  //   confirm();\r\n  //   this.setState({\r\n  //     searchText: selectedKeys[0],\r\n  //     searchedColumn: dataIndex,\r\n  //   });\r\n  // };\r\n\r\n  // handleReset = clearFilters => {\r\n  //   clearFilters();\r\n  //   this.setState({ searchText: '' });\r\n  // };\r\n\r\n  handleClick(e, index) {\r\n\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      currentPage: index\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const { tests, paid_tests, users, appoinments } = this.props;\r\n    const { currentPage } = this.state;\r\n    var pagesCount = Math.ceil(appoinments.length / this.state.pageSize)\r\n    console.log(\"paid_tests\", this.state);\r\n    // const columns = [\r\n    //   {\r\n    //     title: 'Patients',\r\n    //     key: 'Patients',\r\n    //     render: (text, row) => (\r\n    //       <>\r\n    //         <span>{this.get_user_name(row.patientID)}</span>\r\n    //       </>\r\n    //     ),\r\n    //     ...this.getColumnSearchProps('name'),\r\n    //   },\r\n    //   {\r\n    //     title: 'Doctor',\r\n    //     key: 'doctor',\r\n    //     render: (text, row) => (\r\n    //       <>\r\n    //         <span>{this.get_doctor_name(row.doctorID)}</span>\r\n    //       </>\r\n    //     ),\r\n    //   },\r\n    //   {\r\n    //     title: 'Date',\r\n    //     key: 'Date',\r\n    //     render: (text, row) => (\r\n    //       <>\r\n    //         <span>{this.convertDateFormate(row.date)}</span>\r\n    //       </>\r\n    //     ),\r\n    //   },\r\n    //   {\r\n    //     title: 'Shift',\r\n    //     key: 'time',\r\n    //     dataIndex: 'time',\r\n    //   },\r\n    //   {\r\n    //     title: 'Time',\r\n    //     key: 'interval_time',\r\n    //     dataIndex: 'interval_time',\r\n    //   },\r\n    //   {\r\n    //     title: 'Action',\r\n    //     key: 'action',\r\n    //     render: (text, row) => (\r\n    //       <Space size=\"middle\">\r\n    //         <a onClick={event => this.onEdit(event, row)}><img src={require(\"../../images/edit.png\")} width=\"20\" height=\"25\" /></a>\r\n    //         <a onClick={event => this.onDelete(event, row.id)}><img src={require(\"../../images/delete.png\")} width=\"40\" height=\"25\"/></a>\r\n    //       </Space>\r\n    //     ),\r\n    //   },\r\n    // ];\r\n\r\n    return (\r\n      <div className={s.root}>\r\n      <ToastContainer />\r\n        <Row>\r\n          <Col xl={4} style={{ paddingBottom: '10px' }}>\r\n            <Button color=\"primary\" onClick={this.toggle}>Create</Button>{' '}\r\n          </Col>\r\n        </Row>\r\n        {/* <Row>\r\n          <Col xl={12} >\r\n          {appoinments.length >0 ?\r\n            <Widget\r\n              title={<p style={{ fontWeight: 700 }}>Appoiment</p>}\r\n            >\r\n              <Table columns={columns} dataSource={appoinments} />\r\n            </Widget>\r\n            : <p style={{ fontWeight: 700 }}>NO DATA FOUND</p>\r\n\r\n          }\r\n\r\n          </Col>\r\n        </Row> */}\r\n\r\n        <Row>\r\n          <Col xl={12}>\r\n          {appoinments.length >0 ?\r\n            <Widget\r\n              title={<p style={{ fontWeight: 700 }}>Appointment</p>}\r\n            >\r\n              <Table responsive>\r\n                <thead>\r\n                  <tr className=\"fs-sm\">\r\n                    <th className=\"hidden-sm-down\">#</th>\r\n                    <th className=\"hidden-sm-down\">Patients</th>\r\n                    <th className=\"hidden-sm-down\">Doctors</th>\r\n                    <th className=\"hidden-sm-down\">Date</th>\r\n                    <th className=\"hidden-sm-down\">Shift</th>\r\n                    <th className=\"hidden-sm-down\">Time</th>\r\n                    <th />\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {appoinments.map(row => (\r\n                    <tr key={row.id} >\r\n                      <td>{row.id}</td>\r\n                      <td>\r\n                        {this.get_user_name(row.patientID)}\r\n                      </td>\r\n                      <td>\r\n                        {this.get_doctor_name(row.doctorID)}\r\n                      </td>\r\n                      <td>\r\n                      {this.convertDateFormate(row.date)}\r\n                      </td>\r\n                      <td>\r\n                      {row.time}\r\n                      </td>\r\n                      <td>\r\n                      {row.interval_time}\r\n                      </td>\r\n                      <td>\r\n                        <a onClick={event => this.onEdit(event, row)}><img src={require(\"../../images/edit.png\")} width=\"20\" height=\"25\" /></a>\r\n                        <a onClick={event => this.onDelete(event, row.id)}><img src={require(\"../../images/delete.png\")} width=\"40\" height=\"25\"/></a>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n              <div className=\"pagination-wrapper\" style={{float: 'right',fontSize: '20px'}} >\r\n\r\n                <Pagination aria-label=\"Page navigation example\">\r\n\r\n                  <PaginationItem disabled={currentPage <= 0}>\r\n\r\n                    <PaginationLink\r\n                      onClick={e => this.handleClick(e, currentPage - 1)}\r\n                      previous\r\n                      href=\"#\"\r\n                    />\r\n\r\n                  </PaginationItem>\r\n\r\n                  {[...Array(pagesCount)].map((page, i) =>\r\n                    <PaginationItem active={i === currentPage} key={i}>\r\n                      <PaginationLink onClick={e => this.handleClick(e, i)} href=\"#\">\r\n                        {i + 1}\r\n                      </PaginationLink>\r\n                    </PaginationItem>\r\n                  )}\r\n\r\n                  <PaginationItem disabled={currentPage >= pagesCount - 1}>\r\n\r\n                    <PaginationLink\r\n                      onClick={e => this.handleClick(e, currentPage + 1)}\r\n                      next\r\n                      href=\"#\"\r\n                    />\r\n\r\n                  </PaginationItem>\r\n\r\n                </Pagination>\r\n\r\n              </div>\r\n            </Widget>\r\n            : <p style={{ fontWeight: 700 }}>NO DATA FOUND</p> }\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} >\r\n          <ModalHeader toggle={this.toggle}>{this.state.id == 0 ? 'Create Appointment' : 'Edit Appointment' }</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"user\">Patients</label>\r\n              <Input type=\"select\" onChange={(e) => this.onDropdownSelectedUser(e)} label=\"Users\"\r\n              value={this.state.user_Patient}\r\n              >\r\n                  {this.createSelectItemsUser()}\r\n              </Input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Doctors\">Doctors</label>\r\n              <Input  type=\"select\" onChange={(e) => this.onDropdownSelectedDoctors(e)}  label=\"Doctors\"\r\n              value={this.state.user_Doctor}\r\n              >\r\n                  {this.createSelectItemsDoctors()}\r\n              </Input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Date\">Date</label>\r\n              <Input type=\"date\"\r\n              name=\"Date\"\r\n              id=\"Date\"\r\n              min={formatedDate}\r\n              // defaultValue={this.state.Date}\r\n              value={this.state.ShiftDate}\r\n              onChange={(e) => this.SelectDate(e) }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Doctors\">Shift</label>\r\n              <Input  type=\"select\" onChange={(e) => this.onDropdownShiftItemsForDoctors(e)}  label=\"Doctors\"\r\n              value={this.state.Doctor_shift}\r\n              >\r\n                  {this.createShiftItemsForDoctors()}\r\n                  {/* {this.state.AllShift} */}\r\n              </Input>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Doctors\">Interval Time</label>\r\n              <Input  type=\"select\" onChange={(e) => this.onDropdownIntervalTimeForDoctors(e)}  label=\"Doctors\"\r\n              value={this.state.interval_time}\r\n              >\r\n                  {this.createIntervalTimeForDoctors()}\r\n                  {/* {this.state.AllShift} */}\r\n              </Input>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={(event) => this.createAppoinment(event)}>{this.state.id == 0 ? 'Create' : 'Update' }</Button>{' '}\r\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // tests: state.test.tests,\r\n  // paid_tests: state.test.paid_tests,\r\n  users : state.auth.offline_users,\r\n  doctors : state.auth.doctors,\r\n  appoinments : state.appoinment.appoinments,\r\n  appoinment : state.appoinment.appoinment\r\n\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(Appoiment));\r\n"]},"metadata":{},"sourceType":"module"}